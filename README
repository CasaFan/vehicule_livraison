#Projet Energy

## Installation de librairies necessaire
1. [Tkinter](https://docs.python.org/fr/3.7/library/tk.html): l'outil stantard python pour créer interface graphique.
    > Normalement tkinter est installé par défaut en python (3.7) Si ce n'est pas le cas: *apt-get install python-tk*.

1. [folium](https://python-visualization.github.io/folium/): un outil pour la génération de map
    ````bash
    pip install folium
    ````
1. [cefpython](https://github.com/cztomczak/cefpython): un outil pour integrer un web browser dans Tkinter
    ````bash
    pip install cefpython3
    ````
1. [numpy](https://www.numpy.org/): une librairie pour les calculs scientifique.
    ````bash
    pip install numpy
    ````
##Structure du projet
- **data**: un dossier qui contient les raw data
- **exceptions**: un dossier qui contient les exceptions en cas d'erreur
- **src**: dossier code source.
    - **modele**: les classes modèles.
    - `GUI.py`: la classe GUI qui gère interface et interractions d'utilisateur.
- **tmp**: dossier ou on met le fichier .html (le map) généré par la librairie [*folium*](https://python-visualization.github.io/folium/)
- **util**:
    - `FileHandler.py`: la classe qui gère l'import et initialisation de fichier de config & fichier de donnée. 
    - `FocusHandler.py`: le controller qui gère la frame de map sur notre interface.
    - `LoadHandler.py`: le controller qui initialise le fichier html dans notre interface.
- `setup.py`: le ficher "main" pour lancer notre interface.

## Execution du programme
1. Executer le fichier *setup.py*
2. Sur interface, dans le menu **File** cliquer sur **Load config file** en choisissant le fichier `.ini` pour initialiser les configurations de véhicule.
3. En suite, cliquer sur **Load config file** en choissant le dossier de donnée pour qu'il charge les donnée dans le programme.
4. 